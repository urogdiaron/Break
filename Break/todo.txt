ECS:
Check command buffer execution performance. Probably there's a lot of perf on the table if we batch them somehow.
Make commandbuffers a lockless buffer. Fixed sized temp buffer with atomic increments. (For now it's mutexed)
Make a local arena allocator for all the temporary vectors for typeIdLists and queries and whatnot.
Experimenting with dymamic buffer component type?
Prefabs should be not templated, but dynamically loadable
Saving should be enabled again.

Break:
Game should be more complex, this is not pushing the system at all.
    Although preferably i want features that don't involve physics because it seems too hard to do well with dynamically increasing acceleration structures and stuff. I'd rather add enemies with AI or bricks and balls with crazy behaviour.

    Add hp to blocks that change their sprites. 
    Add areas that change ball behaviour (also visuals).
    Pickups that change balls.
    Ball behaviours: Anti-ballmagnet, kills your paddle, moves through bricks, pushes other balls
    Brick behaviours: Moving/rotating (physics yikes), indestructible, pass-through, avoids balls by moving, accelerates ball
    Make rendering completely separate and create new rendering entities in every frame?

Make ballCollisions entities? It really should be at least a blob that the Ecs knows about for dependency handling.
    Same goes for global tiles.
Sprite Color should be separate and non-shared. At least not for the particles, that should animate and fade out with positions moving, etc.
Visibility updates are busted, that should be fixed.

Scheduler
System groups should mostly be automatically assigned based on dependencies of the Views. Also the dependency checks shouldnt be component based but chunk or archetype based.
Just see if it adds any speed, right now threads are very slow, fibers are the same speed (though faster in debug).
